name: publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  create-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create service account key & env file
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_FILLSTEP }}
          SECRETS_ENVIRONMENT: ${{ secrets.SECRETS_ENVIRONMENT }}
        run: |
          echo "$GCP_SA_KEY" | base64 -d > maxpollo.json
          echo "$SECRETS_ENVIRONMENT" | base64 -d > .env.production

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/jhoiner243/implements-back:latest
            ghcr.io/jhoiner243/implements-back:${{ github.sha }}

  deploy:
    needs: create-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY_SECRET }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy .env to EC2
        run: |
          echo "${{ secrets.SECRETS_ENVIRONMENT }}" | base64 -d > .env.production
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env.production ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/project-folder/.env.production

      - name: Deploy via SSH to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/project-folder
            git pull origin main
            docker compose down
            docker compose pull
            docker compose up -d --build
          EOF
